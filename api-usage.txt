ROLE-BASED AUTHENTICATION API USAGE
===================================

This document outlines how to interact with the role-based authentication API.

AUTHENTICATION
-------------

1. Login
   - URL: POST /api/login
   - Description: Authenticates a user and returns a JWT token
   - Request Body:
     {
       "username": "admin", // Use "admin", "coach", or "player"
       "password": "password"
     }
   - Response:
     {
       "message": "Login successful",
       "token": "JWT_TOKEN_HERE",
       "role": "admin" // Role will match the authenticated user
     }
   - Status Codes:
     * 200: Success
     * 400: Missing username or password
     * 401: Invalid credentials
     * 500: Server error

PROTECTED ROUTES
--------------

All protected routes require a valid JWT token passed in the Authorization header:
Authorization: Bearer YOUR_JWT_TOKEN_HERE

1. Dashboard Data
   - URL: GET /api/dashboard
   - Description: Returns role-specific data for the authenticated user
   - Authentication: Required (JWT)
   - Response:
     {
       "user": {
         "username": "admin",
         "role": "admin"
       },
       "data": {
         // Role-specific content here
       }
     }
   - Role-Specific Data Examples:
     
     * Admin:
       "data": {
         "stats": {
           "users": 45,
           "activeUsers": 32,
           "coaches": 5,
           "players": 40
         },
         "recentActions": [
           { "action": "User Added", "time": "Today, 10:30 AM" },
           { "action": "Permission Updated", "time": "Yesterday, 2:15 PM" }
         ]
       }
     
     * Coach:
       "data": {
         "team": {
           "name": "Eagles",
           "playerCount": 15
         },
         "upcomingTraining": [
           { "date": "2023-07-15", "time": "10:00 AM", "focus": "Defense" },
           { "date": "2023-07-18", "time": "2:00 PM", "focus": "Tactics" }
         ]
       }
     
     * Player:
       "data": {
         "performance": {
           "rating": 8.5,
           "attendance": "90%",
           "fitness": "Excellent"
         },
         "upcomingTraining": [
           { "date": "2023-07-15", "time": "10:00 AM", "focus": "Defense" },
           { "date": "2023-07-18", "time": "2:00 PM", "focus": "Tactics" }
         ]
       }
   
   - Status Codes:
     * 200: Success
     * 401: Unauthorized (missing/invalid token)
     * 403: Forbidden (insufficient permissions)

WEB INTERFACE
------------

The application also provides HTML interfaces:

1. Login Form
   - URL: GET /login
   - Description: Renders a simple login form

2. Dashboard
   - URL: GET /dashboard
   - Description: Renders a role-specific dashboard (requires authentication)

TESTING INSTRUCTIONS
------------------

1. Start by accessing the login page: http://localhost:3000/login
2. Login with one of the test users:
   - Username: "admin", Password: "password"
   - Username: "coach", Password: "password"
   - Username: "player", Password: "password"
3. After logging in, you'll be redirected to the dashboard specific to your role
4. You can also test the API directly using tools like Postman or curl

EXAMPLES WITH CURL
----------------

1. Login:
   curl -X POST http://localhost:3000/api/login \
   -H "Content-Type: application/json" \
   -d '{"username":"admin","password":"password"}'

2. Access Dashboard Data (replace YOUR_TOKEN with the token from login response):
   curl -X GET http://localhost:3000/api/dashboard \
   -H "Authorization: Bearer YOUR_TOKEN"
